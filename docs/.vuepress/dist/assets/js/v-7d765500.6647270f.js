"use strict";(self.webpackChunkqratch_dev=self.webpackChunkqratch_dev||[]).push([[740],{7066:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-7d765500",path:"/ja/reference/interfaces/Keyboard.html",title:"Keyboard",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"extends Component",slug:"extends-component",children:[]},{level:2,title:"サンプル",slug:"サンプル",children:[{level:3,title:"メソッド",slug:"メソッド",children:[]},{level:3,title:"up(code: KeyCode): boolean",slug:"up-code-keycode-boolean",children:[]},{level:3,title:"down(code: KeyCode): boolean",slug:"down-code-keycode-boolean",children:[]}]}],filePathRelative:"ja/reference/interfaces/Keyboard.md",git:{updatedTime:1632697215e3,contributors:[{name:"hota1024",email:"hotalog@hota1024.com",commits:1}]}}},2727:(n,s,a)=>{a.r(s),a.d(s,{default:()=>E});var e=a(6252);const p={id:"keyboard",tabindex:"-1"},o=(0,e._)("a",{class:"header-anchor",href:"#keyboard","aria-hidden":"true"},"#",-1),t=(0,e.Uk)(),l={href:"https://github.com/qratch/qratch/blob/master/src/Keyboard/Keyboard.ts",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("Keyboard"),r=(0,e._)("p",null,[(0,e._)("code",null,"Keyboard"),(0,e.Uk)(" はユーザからのキー入力を管理するインターフェースです。")],-1),u=(0,e._)("h2",{id:"extends-component",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#extends-component","aria-hidden":"true"},"#"),(0,e.Uk)(),(0,e._)("code",null,"extends Component")],-1),d=(0,e._)("code",null,"Keyboard",-1),i=(0,e.Uk)(" は "),k=(0,e._)("code",null,"Component",-1),b=(0,e.Uk)(" を継承しています。"),m=(0,e.uE)('<h2 id="サンプル" tabindex="-1"><a class="header-anchor" href="#サンプル" aria-hidden="true">#</a> サンプル</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Keyboard <span class="token punctuation">}</span> <span class="token keyword">from</span> &#39;qratch`\n\n<span class="token comment">// これはあくまでサンプルのため declare を使い、Keyboardを宣言しています。</span>\n<span class="token comment">// QratchApp を使用している場合は QratchApp#keyboard が使用できます。</span>\n<span class="token keyword">declare</span> <span class="token keyword">const</span> keyboard<span class="token operator">:</span> Keyboard\n\n<span class="token keyword">let</span> speed <span class="token operator">=</span> <span class="token number">1</span>\n<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">0</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>keyboard<span class="token punctuation">.</span><span class="token function">pressed</span><span class="token punctuation">(</span><span class="token string">&#39;ArrowUp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  y <span class="token operator">-=</span> speed\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>keyboard<span class="token punctuation">.</span><span class="token function">pressed</span><span class="token punctuation">(</span><span class="token string">&#39;ArrowDown&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  y <span class="token operator">+=</span> speed\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>keyboard<span class="token punctuation">.</span><span class="token function">pressed</span><span class="token punctuation">(</span><span class="token string">&#39;ArrowLeft&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  x <span class="token operator">-=</span> speed\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>keyboard<span class="token punctuation">.</span><span class="token function">pressed</span><span class="token punctuation">(</span><span class="token string">&#39;ArrowRight&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  x <span class="token operator">+=</span> speed\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>keyboard<span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token string">&#39;z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  speed<span class="token operator">--</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>keyboard<span class="token punctuation">.</span><span class="token function">up</span><span class="token punctuation">(</span><span class="token string">&#39;z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  speed<span class="token operator">++</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="メソッド" tabindex="-1"><a class="header-anchor" href="#メソッド" aria-hidden="true">#</a> メソッド</h3>',3),h={id:"pressed-code-keycode-boolean",tabindex:"-1"},y=(0,e._)("a",{class:"header-anchor",href:"#pressed-code-keycode-boolean","aria-hidden":"true"},"#",-1),f=(0,e.Uk)(),_=(0,e.Uk)("pressed(code: "),w=(0,e.Uk)("KeyCode"),U=(0,e.Uk)("): boolean"),g=(0,e._)("p",null,[(0,e.Uk)("引数で指定されたキーが押されている間 "),(0,e._)("code",null,"true"),(0,e.Uk)(" を返します。それ以外のときは "),(0,e._)("code",null,"false"),(0,e.Uk)(" を返します。")],-1),K={id:"up-code-keycode-boolean",tabindex:"-1"},x=(0,e._)("a",{class:"header-anchor",href:"#up-code-keycode-boolean","aria-hidden":"true"},"#",-1),v=(0,e.Uk)(),C=(0,e.Uk)("up(code: "),j=(0,e.Uk)("KeyCode"),A=(0,e.Uk)("): boolean"),q=(0,e._)("p",null,[(0,e.Uk)("引数で指定されたキーが押された瞬間だけ "),(0,e._)("code",null,"true"),(0,e.Uk)(" を返します。それ以外のときは "),(0,e._)("code",null,"false"),(0,e.Uk)(" を返します。")],-1),W={id:"down-code-keycode-boolean",tabindex:"-1"},L=(0,e._)("a",{class:"header-anchor",href:"#down-code-keycode-boolean","aria-hidden":"true"},"#",-1),R=(0,e.Uk)(),z=(0,e.Uk)("down(code: "),D=(0,e.Uk)("KeyCode"),P=(0,e.Uk)("): boolean"),Q=(0,e._)("p",null,[(0,e.Uk)("引数で指定されたキーが離された瞬間だけ "),(0,e._)("code",null,"true"),(0,e.Uk)(" を返します。それ以外のときは "),(0,e._)("code",null,"false"),(0,e.Uk)(" を返します。")],-1),Z={},E=(0,a(3744).Z)(Z,[["render",function(n,s){const a=(0,e.up)("OutboundLink"),Z=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[(0,e._)("h1",p,[o,t,(0,e._)("a",l,[c,(0,e.Wm)(a)])]),r,u,(0,e._)("p",null,[d,i,(0,e.Wm)(Z,{to:"/ja/reference/interfaces/Component.html"},{default:(0,e.w5)((()=>[k])),_:1}),b]),m,(0,e._)("h4",h,[y,f,(0,e._)("code",null,[_,(0,e.Wm)(Z,{to:"/ja/reference/types/KeyCode.html"},{default:(0,e.w5)((()=>[w])),_:1}),U])]),g,(0,e._)("h3",K,[x,v,(0,e._)("code",null,[C,(0,e.Wm)(Z,{to:"/ja/reference/types/KeyCode.html"},{default:(0,e.w5)((()=>[j])),_:1}),A])]),q,(0,e._)("h3",W,[L,R,(0,e._)("code",null,[z,(0,e.Wm)(Z,{to:"/ja/reference/types/KeyCode.html"},{default:(0,e.w5)((()=>[D])),_:1}),P])]),Q],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);