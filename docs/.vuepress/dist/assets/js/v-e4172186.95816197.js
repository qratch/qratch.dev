"use strict";(self.webpackChunkqratch_dev=self.webpackChunkqratch_dev||[]).push([[387],{8341:(e,r,a)=>{a.r(r),a.d(r,{data:()=>t});const t={key:"v-e4172186",path:"/ja/reference/interfaces/Ticker.html",title:"Ticker",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"Component",slug:"component",children:[]},{level:2,title:"メソッド",slug:"メソッド",children:[{level:3,title:"addCallback(callback: () => void): void",slug:"addcallback-callback-void-void",children:[]},{level:3,title:"start(): void",slug:"start-void",children:[]},{level:3,title:"frames(): number",slug:"frames-number",children:[]},{level:3,title:"setTargetFPS(fps: number): void",slug:"settargetfps-fps-number-void",children:[]},{level:3,title:"getTargetFPS(): number",slug:"gettargetfps-number",children:[]}]}],filePathRelative:"ja/reference/interfaces/Ticker.md",git:{updatedTime:1632354737e3,contributors:[{name:"hota1024",email:"hotalog@hota1024.com",commits:1}]}}},2233:(e,r,a)=>{a.r(r),a.d(r,{default:()=>W});var t=a(6252);const d={id:"ticker",tabindex:"-1"},l=(0,t._)("a",{class:"header-anchor",href:"#ticker","aria-hidden":"true"},"#",-1),n=(0,t.Uk)(),i={href:"https://github.com/qratch/qratch/blob/master/src/Ticker/Ticker.ts",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("Ticker"),o=(0,t._)("p",null,[(0,t._)("code",null,"Ticker"),(0,t.Uk)(" はアプリケーションに画面を更新するタイミング(フレーム)を提供するインターフェースです。")],-1),h=(0,t._)("h2",{id:"component",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#component","aria-hidden":"true"},"#"),(0,t.Uk)(),(0,t._)("code",null,"Component")],-1),s=(0,t._)("code",null,"Ticker",-1),u=(0,t.Uk)(" は "),k=(0,t._)("code",null,"Component",-1),f=(0,t.Uk)(" を継承しています。"),p=(0,t.uE)('<h2 id="メソッド" tabindex="-1"><a class="header-anchor" href="#メソッド" aria-hidden="true">#</a> メソッド</h2><h3 id="addcallback-callback-void-void" tabindex="-1"><a class="header-anchor" href="#addcallback-callback-void-void" aria-hidden="true">#</a> <code>addCallback(callback: () =&gt; void): void</code></h3><p>コールバック関数を <code>Ticker</code> に登録します。登録した関数は画面を更新できるタイミング毎に呼び出されます。また登録した関数はフレームサイクルが開始されるまで呼び出されることはありません。</p><h3 id="start-void" tabindex="-1"><a class="header-anchor" href="#start-void" aria-hidden="true">#</a> <code>start(): void</code></h3><p>フレームサイクルを開始します。</p><h3 id="frames-number" tabindex="-1"><a class="header-anchor" href="#frames-number" aria-hidden="true">#</a> <code>frames(): number</code></h3><p>現在までのフレーム数を返します。</p><h3 id="settargetfps-fps-number-void" tabindex="-1"><a class="header-anchor" href="#settargetfps-fps-number-void" aria-hidden="true">#</a> <code>setTargetFPS(fps: number): void</code></h3>',8),b=(0,t._)("code",null,"Ticker",-1),m=(0,t.Uk)(" の目標"),g={href:"https://ja.wikipedia.org/wiki/%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AC%E3%83%BC%E3%83%88",target:"_blank",rel:"noopener noreferrer"},v=(0,t.Uk)("フレームレート(FPS)"),_=(0,t.Uk)("を引数 "),T=(0,t._)("code",null,"fps",-1),C=(0,t.Uk)(" に渡された値に設定します。また "),U=(0,t._)("code",null,"fps",-1),E=(0,t.Uk)(" は "),x=(0,t._)("code",null,"Ticker",-1),w=(0,t.Uk)(" の対応外の値が渡された際、自動的に調整された値が設定されます。"),P=(0,t._)("h3",{id:"gettargetfps-number",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#gettargetfps-number","aria-hidden":"true"},"#"),(0,t.Uk)(),(0,t._)("code",null,"getTargetFPS(): number")],-1),j=(0,t._)("code",null,"Ticker",-1),A=(0,t.Uk)(" の目標"),F={href:"https://ja.wikipedia.org/wiki/%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AC%E3%83%BC%E3%83%88",target:"_blank",rel:"noopener noreferrer"},S=(0,t.Uk)("フレームレート(FPS)"),q=(0,t.Uk)("を返します。"),B={},W=(0,a(3744).Z)(B,[["render",function(e,r){const a=(0,t.up)("OutboundLink"),B=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t._)("h1",d,[l,n,(0,t._)("a",i,[c,(0,t.Wm)(a)])]),o,h,(0,t._)("p",null,[s,u,(0,t.Wm)(B,{to:"/ja/reference/interfaces/Component.html"},{default:(0,t.w5)((()=>[k])),_:1}),f]),p,(0,t._)("p",null,[b,m,(0,t._)("a",g,[v,(0,t.Wm)(a)]),_,T,C,U,E,x,w]),P,(0,t._)("p",null,[j,A,(0,t._)("a",F,[S,(0,t.Wm)(a)]),q])],64)}]])},3744:(e,r)=>{r.Z=(e,r)=>{for(const[a,t]of r)e[a]=t;return e}}}]);